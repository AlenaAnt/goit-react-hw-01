{"version":3,"sources":["components/Profile.module.css","components/Statistical.module.css","components/FriendListItem.module.css","components/TransactionHistory.module.css","components/FriendList.module.css","components/Profile.jsx","components/Statistical.jsx","components/FriendListItem.jsx","components/FriendList.jsx","components/TransactionHistory.jsx","App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","stats","avatar","console","log","style","className","profile","description","src","alt","stats_li","label","quantity","followers","views","likes","defaultProps","Statistical","title","statistics","stat_list","map","stat","item","backgroundColor","Math","random","toString","substr","percentage","id","FriendListItem","isOnline","status","style_true","style_false","width","FriendList","props","friends","friend_list","friend","TransactionHistory","items","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0432f535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__pxWl5\",\"description\":\"Profile_description__bfe_B\",\"stats\":\"Profile_stats__1LG69\",\"label\":\"Profile_label__1CtHU\",\"name\":\"Profile_name__1W-6p\",\"tag\":\"Profile_tag__1UUxQ\",\"location\":\"Profile_location__1IMtG\",\"quantity\":\"Profile_quantity__1X9HX\",\"stats_li\":\"Profile_stats_li__1V9oY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistical_statistics__2aZyh\",\"stat_list\":\"Statistical_stat_list__19NGH\",\"item\":\"Statistical_item__3G5hn\",\"title\":\"Statistical_title__16q8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendListItem_avatar__EytEd\",\"name\":\"FriendListItem_name__dGTCI\",\"status\":\"FriendListItem_status__3_tym\",\"style_true\":\"FriendListItem_style_true__2RR5W\",\"style_false\":\"FriendListItem_style_false__22jRa\",\"item\":\"FriendListItem_item__1ztSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__1fNjd\",\"title\":\"TransactionHistory_title__1_Xtf\",\"type\":\"TransactionHistory_type__2sMO9\",\"amount\":\"TransactionHistory_amount__3IXgC\",\"currency\":\"TransactionHistory_currency__1g5XF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__ERsf0\"};","import React from 'react';\nimport style from './Profile.module.css';\nimport PropTypes from 'prop-types';\n//import './Profile.css';\n\nconst Profile = ({ name, tag, location, stats, avatar }) => {\n  console.log(style);\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={style.avatar} />\n        <p className={style.name}>{name}</p>\n        <p className={style.tag}>@{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li className={style.stats_li}>\n          <span className={style.label}>Followers</span>\n          <span className={style.quantity}>{stats.followers}</span>\n        </li>\n        <li className={style.stats_li}>\n          <span className={style.label}>Views</span>\n          <span className={style.quantity}>{stats.views}</span>\n        </li>\n        <li className={style.stats_li}>\n          <span className={style.label}>Likes</span>\n          <span className={style.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg',\n  stats: {\n    followers: 0,\n    views: 0,\n    likes: 0,\n  },\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\n// import style from './Statistical.module.css';\nimport PropTypes from 'prop-types';\nimport style from './Statistical.module.css';\nconst randomColor = () => {\n  return '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n};\n\nconst Statistical = ({ title, stats }) => {\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title}</h2>}\n      <ul className={style.stat_list}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            className={style.item}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={style.label}>{stat.label}</span>\n            <span className={style.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistical.defaultProps = {\n  title: '',\n};\n\nStatistical.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\nexport default Statistical;\n","import React from 'react';\nimport style from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\n  return (\n    <>\n      <li className={style.item} key={id}>\n        <span\n          className={`${style.status} ${\n            isOnline ? style.style_true : style.style_false\n          }`}\n        ></span>\n        <img className={style.avatar} src={avatar} alt=\"\" width=\"48\" />\n        <p className={style.name}>{name}</p>\n      </li>\n    </>\n  );\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport style from './FriendList.module.css';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\n\nconst FriendList = props => {\n  const { friends } = props;\n  return (\n    <ul className={style.friend_list}>\n      {friends.map(friend => {\n        return (\n          <FriendListItem\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n            id={friend.id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.defaultProps = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/1624/1624681.svg',\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.string.isRequried,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import React from 'react';\n\nimport style from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = props => {\n  console.log(props);\n  const { items } = props;\n\n  return (\n    <table className={style.transaction_history}>\n      <thead>\n        <tr className={style.title}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => {\n          return (\n            <tr key={item.id}>\n              <td className={style.type}>{item.type}</td>\n              <td className={style.amount}>{item.amount}</td>\n              <td className={style.currency}>{item.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './components/Profile';\nimport user from './user.json';\nimport Statistical from './components/Statistical';\nimport statisticalData from './statistical-data.json';\nimport FriendList from './components/FriendList.jsx';\nimport friends from './friends.json';\nimport TransactionHistory from './components/TransactionHistory';\nimport transactions from './transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      {' '}\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistical title=\"Upload stats\" stats={statisticalData} />\n      <Statistical stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} /> ;\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}